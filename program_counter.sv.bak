module program_counter(reset, clk);
	input logic reset, clk;
	parameter size = 64, add_code = 3'b010 incr = 64'd4;
	logic [size-1:0] count_wr, count_rd;
	
	register #size counter_memory (
		.d(count_wr),
		.q(count_rd),
		.reset(reset),
		.clk(clk)
	);
	
	logic pc_adder_neg, pc_adder_z, pc_adder_ovfl, pc_adder_cout;
	alu pc_adder (
		.A(count_rd),
		.B(incr),
		.cntrl(add_code)
		.result(count_wr),
		.negative(pc_adder_neg),
		.zero(pc_adder_z),
		.overflow(pc_adder_ovfl),
		.carry_out(pc_adder_cout)
	);
	
endmodule
