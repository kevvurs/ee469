module mux32_1 #(parameter WIDTH=8, SUBWIDTH=2) (i0, i1, i2, i3, sel, out)
	input logic [31:0] i0, i1, i2, i3;
	input logic [4:0] sel;
	logic [WIDTH-1:0] out0;
	logic [SUBWIDTH-1:0] out1;
	output logic out;
	
	genvar i; 
 
	generate
		for(i=0; i<WIDTH; i++) begin : eachDff       
			mux4_1 muxx (.i0(i0[i]), .i1(i1[i]), .i2(i2[i]), .i3(i3[i]), .sel(sel[1:0]), .out(out0[i]));
		end   
	endgenerate
	
	genvar j; 
 
	generate
		for(j=0; j<SUBWIDTH; j++) begin : eachDff       
			mux4_1 muxx (.i0(out0[j]), .i1(out0[j+1]), .i2(out0[j+2]), .i3(out0[j+3]), .sel(sel[3:2]), .out(.out1[j]));
		end   
	endgenerate
	
	
	mux4_1 muxx (.i0(out1[0]), .i1(out1[1]), .i2(0), .i3(0), .sel({0, sel[4]}), .out(out));

endmodule
